// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Chat pop up renders correctly 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "backgroundColor": "white",
            "borderRadius": 20,
            "flexDirection": "column",
            "height": "50%",
            "justifyContent": "space-between",
            "maxHeight": 550,
            "padding": "2%",
            "width": "95%",
          },
          false,
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "poppins-bold",
              "fontSize": 16,
              "margin": "auto",
              "paddingTop": 10,
              "textAlign": "center",
            },
            false,
          ]
        }
      >
        Chat
         with 
        Bill Gates
      </Text>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "padding": "3%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "#1A1A1A",
              "fontFamily": "poppins-light",
              "fontSize": 14,
              "margin": "auto",
              "padding": "2%",
              "paddingTop": "7%",
              "textAlign": "left",
            }
          }
        >
          Select an intent
        </Text>
        <View
          style={
            Object {
              "marginLeft": 5,
            }
          }
        >
          <Text
            onPress={[Function]}
            style={
              Object {
                "color": "black",
                "position": "absolute",
                "zIndex": 99,
              }
            }
          >
            
          </Text>
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="ios_touchable_wrapper"
            >
              <View
                pointerEvents="box-only"
              >
                <TextInput
                  allowFontScaling={true}
                  editable={false}
                  rejectResponderTermination={true}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "black",
                      },
                    ]
                  }
                  testID="text_input"
                  underlineColorAndroid="transparent"
                  value="Select an option..."
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onOrientationChange={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              testID="ios_modal"
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
                testID="ios_modal_top"
              />
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#f8f8f8",
                      "borderTopColor": "#dedede",
                      "borderTopWidth": 1,
                      "flexDirection": "row",
                      "height": 45,
                      "justifyContent": "space-between",
                      "paddingHorizontal": 10,
                      "zIndex": 2,
                    },
                    undefined,
                  ]
                }
                testID="input_accessory_view"
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderColor": "#a1a1a1",
                            "borderRightWidth": 1.5,
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "marginLeft": 11,
                            "transform": Array [
                              Object {
                                "translateY": 4,
                              },
                              Object {
                                "rotate": "-45deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderColor": "#a1a1a1",
                            "borderRightWidth": 1.5,
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "marginLeft": 22,
                            "transform": Array [
                              Object {
                                "translateY": -5,
                              },
                              Object {
                                "rotate": "135deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="done_button"
                >
                  <View
                    testID="needed_for_touchable"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#007aff",
                            "fontSize": 17,
                            "fontWeight": "600",
                            "paddingRight": 11,
                            "paddingTop": 1,
                          },
                          undefined,
                          Object {},
                        ]
                      }
                      testID="done_text"
                    >
                      Done
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#d0d4da",
                      "justifyContent": "center",
                    },
                    Object {
                      "height": 215,
                    },
                    undefined,
                  ]
                }
              >
                <View>
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "Select an option...",
                          "textColor": undefined,
                          "value": null,
                        },
                        Object {
                          "label": "Pitch Decks",
                          "textColor": undefined,
                          "value": "Pitch Decks",
                        },
                        Object {
                          "label": "Proposals",
                          "textColor": undefined,
                          "value": "Proposals",
                        },
                        Object {
                          "label": "User Experience",
                          "textColor": undefined,
                          "value": "User Experience",
                        },
                        Object {
                          "label": "Public Speaking",
                          "textColor": undefined,
                          "value": "Public Speaking",
                        },
                        Object {
                          "label": "Apps",
                          "textColor": undefined,
                          "value": "Apps",
                        },
                        Object {
                          "label": "Graphic Design",
                          "textColor": undefined,
                          "value": "Graphic Design",
                        },
                        Object {
                          "label": "Technology",
                          "textColor": undefined,
                          "value": "Technology",
                        },
                        Object {
                          "label": "Websites",
                          "textColor": undefined,
                          "value": "Websites",
                        },
                        Object {
                          "label": "Marketing",
                          "textColor": undefined,
                          "value": "Marketing",
                        },
                        Object {
                          "label": "Social Media",
                          "textColor": undefined,
                          "value": "Social Media",
                        },
                        Object {
                          "label": "SEO",
                          "textColor": undefined,
                          "value": "SEO",
                        },
                        Object {
                          "label": "Wireframing",
                          "textColor": undefined,
                          "value": "Wireframing",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                    testID="ios_picker"
                  />
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "#1A1A1A",
              "fontFamily": "poppins-light",
              "fontSize": 14,
              "margin": "auto",
              "marginTop": 20,
              "padding": "2%",
              "paddingTop": "7%",
              "textAlign": "left",
            }
          }
        >
          Write a message
        </Text>
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          placeholder="Type here...    "
          placeholderTextColor="grey"
          rejectResponderTermination={true}
          style={
            Array [
              Object {
                "color": "grey",
                "fontFamily": "poppins-light",
                "fontSize": 16,
                "margin": "auto",
                "padding": "2%",
                "textAlign": "left",
              },
              false,
            ]
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "black",
            "borderRadius": 7.5,
            "flexDirection": "row",
            "height": 30,
            "justifyContent": "center",
            "opacity": 1,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 10,
                "marginLeft": "5%",
              },
              false,
            ]
          }
        >
          SEND 
          CHAT
           REQUEST
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;

exports[`Chat pop up renders correctly with different params 1`] = `
<Modal
  animationType="none"
  hardwareAccelerated={false}
  hideModalContentWhileAnimating={false}
  onModalHide={[Function]}
  onModalWillHide={[Function]}
  onModalWillShow={[Function]}
  onRequestClose={[Function]}
  scrollHorizontal={false}
  scrollOffset={0}
  scrollOffsetMax={0}
  scrollTo={null}
  supportedOrientations={
    Array [
      "portrait",
      "landscape",
    ]
  }
  swipeThreshold={100}
  transparent={true}
  visible={false}
>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "black",
        "bottom": 0,
        "height": 1334,
        "left": 0,
        "opacity": 0,
        "position": "absolute",
        "right": 0,
        "top": 0,
        "width": 750,
      }
    }
  />
  <View
    hideModalContentWhileAnimating={false}
    onModalHide={[Function]}
    onModalWillHide={[Function]}
    onModalWillShow={[Function]}
    pointerEvents="box-none"
    scrollHorizontal={false}
    scrollOffset={0}
    scrollOffsetMax={0}
    scrollTo={null}
    style={
      Object {
        "flex": 1,
        "justifyContent": "center",
        "margin": 37.5,
        "transform": Array [
          Object {
            "translateY": 0,
          },
        ],
      }
    }
    supportedOrientations={
      Array [
        "portrait",
        "landscape",
      ]
    }
    swipeThreshold={100}
  >
    <View
      style={
        Array [
          Object {
            "alignSelf": "center",
            "backgroundColor": "white",
            "borderRadius": 20,
            "flexDirection": "column",
            "height": "50%",
            "justifyContent": "space-between",
            "maxHeight": 550,
            "padding": "2%",
            "width": "95%",
          },
          Object {
            "alignSelf": "center",
            "backgroundColor": "black",
            "borderRadius": 20,
            "flexDirection": "column",
            "height": "50%",
            "justifyContent": "space-between",
            "maxHeight": 550,
            "padding": "2%",
            "width": "95%",
          },
        ]
      }
    >
      <Text
        style={
          Array [
            Object {
              "color": "black",
              "fontFamily": "poppins-bold",
              "fontSize": 16,
              "margin": "auto",
              "paddingTop": 10,
              "textAlign": "center",
            },
            Object {
              "color": "white",
              "fontFamily": "poppins-bold",
              "fontSize": 16,
              "margin": "auto",
              "paddingTop": 10,
              "textAlign": "center",
            },
          ]
        }
      >
        Connect
         with 
        Bill Gates
      </Text>
      <View
        style={
          Object {
            "alignItems": "flex-start",
            "padding": "3%",
          }
        }
      >
        <Text
          style={
            Object {
              "color": "grey",
              "fontFamily": "poppins-light",
              "fontSize": 14,
              "margin": "auto",
              "padding": "2%",
              "paddingTop": "7%",
              "textAlign": "left",
            }
          }
        >
          Select an intent
        </Text>
        <View
          style={
            Object {
              "marginLeft": 5,
            }
          }
        >
          <Text
            onPress={[Function]}
            style={
              Object {
                "color": "white",
                "position": "absolute",
                "zIndex": 99,
              }
            }
          >
            
          </Text>
          <View
            style={
              Array [
                Object {
                  "alignSelf": "stretch",
                },
                undefined,
              ]
            }
          >
            <View
              accessible={true}
              focusable={true}
              isTVSelectable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
              testID="ios_touchable_wrapper"
            >
              <View
                pointerEvents="box-only"
              >
                <TextInput
                  allowFontScaling={true}
                  editable={false}
                  rejectResponderTermination={true}
                  style={
                    Array [
                      undefined,
                      Object {
                        "color": "white",
                      },
                    ]
                  }
                  testID="text_input"
                  underlineColorAndroid="transparent"
                  value="Select an option..."
                />
              </View>
            </View>
            <Modal
              hardwareAccelerated={false}
              onOrientationChange={[Function]}
              supportedOrientations={
                Array [
                  "portrait",
                  "landscape",
                ]
              }
              testID="ios_modal"
              transparent={true}
              visible={false}
            >
              <View
                accessible={true}
                focusable={true}
                isTVSelectable={true}
                onClick={[Function]}
                onResponderGrant={[Function]}
                onResponderMove={[Function]}
                onResponderRelease={[Function]}
                onResponderTerminate={[Function]}
                onResponderTerminationRequest={[Function]}
                onStartShouldSetResponder={[Function]}
                style={
                  Object {
                    "flex": 1,
                    "opacity": 1,
                  }
                }
                testID="ios_modal_top"
              />
              <View
                style={
                  Array [
                    Object {
                      "alignItems": "center",
                      "backgroundColor": "#f8f8f8",
                      "borderTopColor": "#dedede",
                      "borderTopWidth": 1,
                      "flexDirection": "row",
                      "height": 45,
                      "justifyContent": "space-between",
                      "paddingHorizontal": 10,
                      "zIndex": 2,
                    },
                    undefined,
                  ]
                }
                testID="input_accessory_view"
              >
                <View
                  style={
                    Array [
                      Object {
                        "flexDirection": "row",
                      },
                      undefined,
                    ]
                  }
                >
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderColor": "#a1a1a1",
                            "borderRightWidth": 1.5,
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "marginLeft": 11,
                            "transform": Array [
                              Object {
                                "translateY": 4,
                              },
                              Object {
                                "rotate": "-45deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                  <View
                    accessible={true}
                    focusable={true}
                    isTVSelectable={true}
                    onClick={[Function]}
                    onResponderGrant={[Function]}
                    onResponderMove={[Function]}
                    onResponderRelease={[Function]}
                    onResponderTerminate={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    style={
                      Object {
                        "opacity": 1,
                      }
                    }
                  >
                    <View
                      style={
                        Array [
                          Object {
                            "backgroundColor": "transparent",
                            "borderColor": "#a1a1a1",
                            "borderRightWidth": 1.5,
                            "borderTopWidth": 1.5,
                            "height": 15,
                            "width": 15,
                          },
                          undefined,
                          Object {
                            "marginLeft": 22,
                            "transform": Array [
                              Object {
                                "translateY": -5,
                              },
                              Object {
                                "rotate": "135deg",
                              },
                            ],
                          },
                          undefined,
                          Object {},
                        ]
                      }
                    />
                  </View>
                </View>
                <View
                  accessible={true}
                  focusable={true}
                  hitSlop={
                    Object {
                      "bottom": 4,
                      "left": 4,
                      "right": 4,
                      "top": 4,
                    }
                  }
                  isTVSelectable={true}
                  onClick={[Function]}
                  onResponderGrant={[Function]}
                  onResponderMove={[Function]}
                  onResponderRelease={[Function]}
                  onResponderTerminate={[Function]}
                  onResponderTerminationRequest={[Function]}
                  onStartShouldSetResponder={[Function]}
                  style={
                    Object {
                      "opacity": 1,
                    }
                  }
                  testID="done_button"
                >
                  <View
                    testID="needed_for_touchable"
                  >
                    <Text
                      allowFontScaling={false}
                      style={
                        Array [
                          Object {
                            "color": "#007aff",
                            "fontSize": 17,
                            "fontWeight": "600",
                            "paddingRight": 11,
                            "paddingTop": 1,
                          },
                          undefined,
                          Object {},
                        ]
                      }
                      testID="done_text"
                    >
                      Done
                    </Text>
                  </View>
                </View>
              </View>
              <View
                style={
                  Array [
                    Object {
                      "backgroundColor": "#d0d4da",
                      "justifyContent": "center",
                    },
                    Object {
                      "height": 215,
                    },
                    undefined,
                  ]
                }
              >
                <View>
                  <RCTPicker
                    items={
                      Array [
                        Object {
                          "label": "Select an option...",
                          "textColor": undefined,
                          "value": null,
                        },
                        Object {
                          "label": "Pitch Decks",
                          "textColor": undefined,
                          "value": "Pitch Decks",
                        },
                        Object {
                          "label": "Proposals",
                          "textColor": undefined,
                          "value": "Proposals",
                        },
                        Object {
                          "label": "User Experience",
                          "textColor": undefined,
                          "value": "User Experience",
                        },
                        Object {
                          "label": "Public Speaking",
                          "textColor": undefined,
                          "value": "Public Speaking",
                        },
                        Object {
                          "label": "Apps",
                          "textColor": undefined,
                          "value": "Apps",
                        },
                        Object {
                          "label": "Graphic Design",
                          "textColor": undefined,
                          "value": "Graphic Design",
                        },
                        Object {
                          "label": "Technology",
                          "textColor": undefined,
                          "value": "Technology",
                        },
                        Object {
                          "label": "Websites",
                          "textColor": undefined,
                          "value": "Websites",
                        },
                        Object {
                          "label": "Marketing",
                          "textColor": undefined,
                          "value": "Marketing",
                        },
                        Object {
                          "label": "Social Media",
                          "textColor": undefined,
                          "value": "Social Media",
                        },
                        Object {
                          "label": "SEO",
                          "textColor": undefined,
                          "value": "SEO",
                        },
                        Object {
                          "label": "Wireframing",
                          "textColor": undefined,
                          "value": "Wireframing",
                        },
                      ]
                    }
                    onChange={[Function]}
                    onResponderTerminationRequest={[Function]}
                    onStartShouldSetResponder={[Function]}
                    selectedIndex={0}
                    style={
                      Array [
                        Object {
                          "height": 216,
                        },
                        undefined,
                      ]
                    }
                    testID="ios_picker"
                  />
                </View>
              </View>
            </Modal>
          </View>
        </View>
        <Text
          style={
            Object {
              "color": "grey",
              "fontFamily": "poppins-light",
              "fontSize": 14,
              "margin": "auto",
              "marginTop": 20,
              "padding": "2%",
              "paddingTop": "7%",
              "textAlign": "left",
            }
          }
        >
          Write a message
        </Text>
        <TextInput
          allowFontScaling={true}
          onChangeText={[Function]}
          placeholder="Type here...    "
          placeholderTextColor="white"
          rejectResponderTermination={true}
          style={
            Array [
              Object {
                "color": "grey",
                "fontFamily": "poppins-light",
                "fontSize": 16,
                "margin": "auto",
                "padding": "2%",
                "textAlign": "left",
              },
              Object {
                "color": "white",
                "fontFamily": "poppins-light",
                "fontSize": 16,
                "margin": "auto",
                "padding": "2%",
                "textAlign": "left",
              },
            ]
          }
          underlineColorAndroid="transparent"
          value=""
        />
      </View>
      <View
        accessible={true}
        focusable={true}
        isTVSelectable={true}
        onClick={[Function]}
        onResponderGrant={[Function]}
        onResponderMove={[Function]}
        onResponderRelease={[Function]}
        onResponderTerminate={[Function]}
        onResponderTerminationRequest={[Function]}
        onStartShouldSetResponder={[Function]}
        style={
          Object {
            "alignItems": "center",
            "alignSelf": "center",
            "backgroundColor": "white",
            "borderRadius": 7.5,
            "flexDirection": "row",
            "height": 30,
            "justifyContent": "center",
            "opacity": 1,
            "width": "90%",
          }
        }
      >
        <Text
          style={
            Array [
              Object {
                "color": "white",
                "fontSize": 10,
                "marginLeft": "5%",
              },
              Object {
                "color": "black",
                "fontSize": 10,
                "marginLeft": "5%",
              },
            ]
          }
        >
          SEND 
          CONNECT
           REQUEST
        </Text>
      </View>
    </View>
  </View>
</Modal>
`;
